apiVersion: v1
kind: Secret
metadata:
  name: mysql-pass
  namespace: 24-wp
data:
   password:  Z2FnYW45NA==
type: Opaque

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:686878367233:certificate/4d0fa014-9277-4e3d-91cd-29aa00705710
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-redirect-http-to-https: "true"
    prometheus.io/scrape: "true"
    prometheus.io/path: "v1/metrics"
    prometheus.io/port: "8080"
  labels:
    app: wordpress
  name: wordpress
  namespace: 24-wp
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 80
  selector:
    app: wordpress
      
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: wordpress
#  namespace: 24-wp
#  labels:
#    app: wordpress
#spec:
#  ports:
#    - port: 80
#  selector:
#    app: wordpress
#    tier: frontend
#  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  namespace: 24-wp
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: wordpress
  namespace: 24-wp
  labels:
    app: wordpress
spec:
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  template:
    metadata:
      namespace: 24-wp
      labels:
        app: wordpress
        tier: frontend  
    spec:
      initContainers:
      - image: busybox
        name: my-init-permissions
        command: ['chown', '-R', 'www-data:www-data', '/var/www/html/wp-content/uploads']
          
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html/wp-content/uploads   


      containers:
      - image: raiyan11/dockerwordpress
        name: wordpress      
        env:
        - name: WORDPRESS_DB_HOST
          value: bit.us-west-2.rds.amazonaws.com
        - name: WORDPRESS_DB_PASSWORD
          value: CgS0cA8j
        - name: WORDPRESS_DB_NAME
          value: docker
        - name: WORDPRESS_DB_USER
          value: admin
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html/wp-content/uploads

        - mountPath: /usr/local/etc/php/conf.d/uploads.ini
          name: php-config
          subPath: uploads.ini  

      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim

      - name: php-config
        configMap:
          defaultMode: 420
          name: wp-php-config  
